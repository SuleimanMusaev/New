package com.TelRun.base.lesson10;

/**
 * Для каждого метода выделяется свой блок стековой памяти, но память куча (Heap) общая для всего приложения!!!
 *
 * Стековая память (Stack)
 * В стеке хранятся значения примитивных переменных
 * Когда запускается какой-либо метод, для него создается блок стековой памяти,
 * в которой создаются примитивные переменные
 * Когда метод заканчивает свою работу, то блок стековой памяти удаляется
 * и удаляет за собой примитивные переменные
 * <p>
 * |                                            |
 * |                                            |
 * |                                            |
 * |print : int count = 20, int[] array = AA00EE, String answer = #FFAA0E : "Error"|
 * |main :int number = 10, String text = #AA00EE, text = #EEFFBB, String answer = #FFAA0E : "Error"|
 * Все ссылочные типы данных хранятся в памяти Heap,
 * а в стеке (в переменных, в которые там созданы) хранятся ссылки на эти объекты
 * <p>
 * Куча (Heap)
 * #FFHHA0 : {1, 2, 3}
 * <p>
 * ------String pool----------
 * #AA00EE : "Hello" //будет возможно удалена, потому что на нее никто не ссылается
 *
 * #EEFFBB : "Hello Java"
 *
 * #FFAA0E : "Error"
 * #FEAA0E : "Error"//позволяет не дублировать уже существующие строки
 * ---------------------------
 * <p>
 * Если удаляются переменные, которые хранили в себе ссылки на объекты, то сами
 * объекты (массивы, строки, объекты других классов) остаются в памяти Heap
 * <p>
 * Специальный процесс под названием сборщик мусора, проверяет объекты в памяти Heap
 * и если на какие-то объекты никто не ссылается, то они удаляются из памяти
 */
public class MemoryExample {

    public static void main(String[] args) {
        int number = 10;
        print();
        String text = "Hello";
        String answer = "Error";
    }

    private static void print() {
        int count = 20;
        int[] array = {1, 2, 3};
        String answer = "Error";
    }
}
